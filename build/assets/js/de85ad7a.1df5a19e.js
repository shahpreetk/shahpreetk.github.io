"use strict";(self.webpackChunkshahpreetk_github_io=self.webpackChunkshahpreetk_github_io||[]).push([[8496],{4310:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var a=n(7285),i=n(4848),r=n(8453);const o={slug:"multithreading-in-java",title:"Multithreading in Java",description:"Multithreading and Concurrency in Java are essential concepts for building scalable and responsive applications. This guide covers the basics of multithreading in Java.",authors:"shahpreetk",tags:["java","multithreading","race-condition","concurrency","lock","semaphore","monitor","synchronization"]},l=void 0,s={authorsImageUrls:[void 0]},c=[{value:"Introduction to Multithreading",id:"introduction-to-multithreading",level:2}];function h(e){const t={h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction-to-multithreading",children:"Introduction to Multithreading"}),"\n",(0,i.jsx)(t.p,{children:"Multi-threading in Java enables a single process to manage multiple threads concurrently, allowing tasks to be executed in parallel. This is achieved through the Thread class or the Runnable interface, empowering developers to create and oversee threads for parallel task execution."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var a=n(6540);const i={},r=a.createContext(i);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}},7285:e=>{e.exports=JSON.parse('{"permalink":"/blog/multithreading-in-java","source":"@site/blog/2024-03-06/2024-03-06-multithreading-java.md","title":"Multithreading in Java","description":"Multithreading and Concurrency in Java are essential concepts for building scalable and responsive applications. This guide covers the basics of multithreading in Java.","date":"2024-03-06T00:00:00.000Z","tags":[{"inline":true,"label":"java","permalink":"/blog/tags/java"},{"inline":true,"label":"multithreading","permalink":"/blog/tags/multithreading"},{"inline":true,"label":"race-condition","permalink":"/blog/tags/race-condition"},{"inline":true,"label":"concurrency","permalink":"/blog/tags/concurrency"},{"inline":true,"label":"lock","permalink":"/blog/tags/lock"},{"inline":true,"label":"semaphore","permalink":"/blog/tags/semaphore"},{"inline":true,"label":"monitor","permalink":"/blog/tags/monitor"},{"inline":true,"label":"synchronization","permalink":"/blog/tags/synchronization"}],"readingTime":3.845,"hasTruncateMarker":true,"authors":[{"name":"Preet Shah","title":"Software Developer @ JPMC","url":"https://github.com/shahpreetk","description":"Preet Shah is a Full-Stack Software Developer at JP Morgan Chase, specialising in Java Spring Boot, Python and React. Preet is an AWS Certified Associate, currently aiming for her Developer Certification. In her free time, she enjoys crocheting, diving into murder mystery novels, and watching cat videos.","page":{"permalink":"/blog/authors/shahpreetk"},"socials":{"x":"https://x.com/shahpreetk","linkedin":"https://www.linkedin.com/in/shahpreetk/"},"imageURL":"https://github.com/shahpreetk.png\\\\","key":"shahpreetk"}],"frontMatter":{"slug":"multithreading-in-java","title":"Multithreading in Java","description":"Multithreading and Concurrency in Java are essential concepts for building scalable and responsive applications. This guide covers the basics of multithreading in Java.","authors":"shahpreetk","tags":["java","multithreading","race-condition","concurrency","lock","semaphore","monitor","synchronization"]},"unlisted":false,"prevItem":{"title":"Java Spring Boot Project - Part 1","permalink":"/blog/setting-up-a-java-spring-boot-project-part-1"},"nextItem":{"title":"Garbage Collector in Java","permalink":"/blog/garbage-collector-in-java"}}')}}]);